@startuml

class ImportLegacySystemDataGUI{
}
class ImportLegacySystemDataController{
+getCCVaccinationCenter() : void
+saveFileContent(file : File) : void
+saveData() : void
+addToImportedList(snsUserNumber : String, snsUserName : String, vaccineType : String, vaccineName : String, doseNumber : String, lotNumber : String, scheduledDateTime : String, arrivalDateTime : String,
                                  dateOfAdministration : String, leavingDateTime : String) : void
+getImportedDataAuxList() : List<ImportedDataAux>
+sortByArrivalTime(sortingOrder : int) : List<ImportedDataAux>
+sortByLeavingTime(sortingOrder : int) : List<ImportedDataAux>
}
class App{
+getInstance() : App
+getCurrentUserSession() : UserSession
}
class UserSession{
+getUserID() : Email
}
class Company {
 -designation
 +getSnsUserStore()
 +getVTStore()
 +getEmployeeStore()
}
class EmployeeStore{
+findEmployeeByEmail(email : Email) : Employee
}
class CenterCoordinator extends Employee{
+getVaccinationCenter() : VaccinationCenter
}
class SNSUserStore {
-snsuserStore : List<SNSUser>
+findSnsUserByNumber(snsNumber : long) : SNSUser
}
class SNSUser {
-name
-address
-sex
-phoneNumber
-email
-birthDate
-snsNumber
-citizenCard
+checkUserNumber(snsNumber : long) : boolean
+addAppointment(appointment : Appointment) : void
}
class Appointment {
-vaccineType : VaccineType
-snsUser : SNSUser
-date : Date
-time : Date
+Appointment(vaccineType : VaccineType, snsUser : SNSUser , date : LocalDate , time : LocalTime , arrivalTime : LocalDateTime , leavingTime : LocalDateTime )
+addVaccineAdministration(lotNumber : String, dateOfAdministration : LocalDateTime, vaccine : Vaccine, admp : AdministrationProcess , dose Dose) : void
+setVaccineAdministration(vaccineAdmonistration : VaccineAdministration) : void
}
class VaccineType {
-code : String
-description : String
-vaccineTechnology : String;
+getVaccineStore() : VaccineStore
}
class Vaccine {
  -id : String
  -name : String
  -brand : String
  +checkVaccineName(vaccineName : String) : boolean
  +getAdmProcessStore() : AdmProcessStore
}
class VaccinationCenter {
-name : String
-phoneNumber : long
-email : String
-openingHour : Date
-closingHour : Date
-slotDuration : int
-numberOfVaccinesSlot : int
+findSlot(date : Date,time : Date) : Slot
+createVaccinationAppointment(vaccineType : VaccineType, snsUser : SNSUser, date : LocalDate, time : LocalTime, arrivalTime : LocalDateTime, leavingTime : LocalDateTime) : void
}
class AdministrationProcess {
-numberOfDoses : int
-maximumAge : int
-minumumAge : int
+findDose(int doseNumber) : Dose
}
class Dose {
-doseNumber : int
-dosage : int
-timeBetweenDoses : int
+checkDoseNumber(doseNumber : int) : boolean
}
class VaccineAdministration{
-lotNumber : String
-dateOfAdministration : LocalDateTime
+VaccineAdministration(lotNumber : String,dateOfAdministration : LocalDateTime, vaccine Vaccine, admp : AdministrationProcess, dose : Dose)
}
class DoseStore{
-listDoses : List<Dose>
+findDose(doseNumber : int) : Dose
}
class AdmProcessStore{
-listAdmp : List<AdministrationProcess>
+getAdmProcess(age : int) : AdministrationProcess
+findDose(doseNumber : int) : Dose
}
class DayList {
-openingHour : Date
-closingHour : Date
-date : Date
-slotDuration : int
-numberOfVaccinesSlot : int
-dayList : List<DaySchedule>
+addDay(day : DaySchedule) : void
+findDay(date : Date) : DaySchedule
}
class DaySchedule {
-openingHour : Date
-closingHour : Date
-slotDuration : int
-numberOfVaccinesSlot : int
-date : Date
-slotList : List<Slot>
+DaySchedule(openingHour : Date, closingHour : Date, slotDuration : int, numberOfVaccinesSlot : int, date : Date)
+findSlot(time : Date) : Slot
+checkDay(date : Date,time : Date) : boolean
}
class AppointmentStore {
-listAppointment : List<Appointment>
+createVaccinationAppointment(vaccineType : VaccineType, snsUser : long, time : Date,date : Date) : Appointment
}
class SNSUserAppointmentStore {
-listSNSUserAppointments : List<Appointment>
+addAppointment(appointment : Appointment) : void
}
class Slot {
-startTime : Date
-endTime : Date
-slotDuration : int
-numberOfVaccinesSlot : int
+addScheduledVaccine() : void
+validateSlot() : boolean
+checkSlot(time : Date) : boolean
}
class VaccineTypeStore {
-listVT : List<VaccineType>
+findVaccine(vaccineName : String) : Vaccine
}
class VaccineStore{
+findVaccine(vaccineName : String) : Vaccine
}
class QuickSort{
+quickSort(importedList : List<List<String>> , low : int , high : int , index : int ) : List<List<String>>
}
class BubbleSort{
+bubbleSort(importedList : List<List<String>>, timeToSortIndex : int) : List<List<String>>
}

ImportLegacySystemDataGUI ..> ImportLegacySystemDataController
ImportLegacySystemDataGUI ..> ImportedDataAux
ImportLegacySystemDataController ..> App
ImportLegacySystemDataController ..> UserSession
ImportLegacySystemDataController ..> Company
ImportLegacySystemDataController ..> EmployeeStore
ImportLegacySystemDataController ..> AdmProcessStore
ImportLegacySystemDataController ..> AdministrationProcess
ImportLegacySystemDataController ..> Dose
ImportLegacySystemDataController ..> DoseStore
ImportLegacySystemDataController ..> CenterCoordinator
ImportLegacySystemDataController ..> Vaccine
ImportLegacySystemDataController ..> SNSUserStore
ImportLegacySystemDataController ..> VaccineTypeStore
ImportLegacySystemDataController ..> SNSUser
ImportLegacySystemDataController ..> VaccinationCenter
ImportLegacySystemDataController ..> Slot
ImportLegacySystemDataController ..> VaccineType
ImportLegacySystemDataController ..> Appointment
ImportLegacySystemDataController ..> ImportedDataAux
ImportLegacySystemDataController ..> BubbleSort
ImportLegacySystemDataController ..> QuickSort

Company "1" --> "1" SNSUserStore : uses
Company "1" --> "1" VaccineTypeStore : uses
Company "1" --> "1" EmployeeStore : uses
EmployeeStore "1" --> "1" Employee : saves
SNSUserStore "1" --> "*" SNSUser : saves
SNSUser "1" --> "1" SNSUserAppointmentStore : uses
SNSUserAppointmentStore "1" --> "*" Appointment : saves
CenterCoordinator ..> VaccinationCenter

VaccineTypeStore "1" --> "*" VaccineType : saves
VaccineType "1" --> "1" VaccineStore : uses
VaccineStore "1" --> "*" Vaccine : saves
Vaccine "1" --> "1" AdmProcessStore : uses
AdmProcessStore "1" --> "*" AdministrationProcess : saves
AdministrationProcess "1" --> "1" DoseStore : uses
DoseStore "1" --> "*" Dose : saves
VaccinationCenter "1" --> "1" DayList : has
DayList "1" --> "*" DaySchedule : saves
VaccinationCenter ..> DaySchedule
DaySchedule "1" --> "1..*" Slot : has
VaccinationCenter "1" --> "1" AppointmentStore : uses
VaccinationCenter ..> SNSUser
VaccinationCenter ..> VaccineType
VaccinationCenter ..> Appointment
Appointment "1" --> "1" VaccineAdministration : enables
AppointmentStore "1" --> "*" Appointment : saves
Appointment "*" --> "1" SNSUser : requested by
Appointment "1" --> "1" VaccineType : to administer
DayList ..> Slot


@enduml